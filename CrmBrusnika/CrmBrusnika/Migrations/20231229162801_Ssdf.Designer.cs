// <auto-generated />
using System;
using CrmBrusnika.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CrmBrusnika.Migrations
{
    [DbContext(typeof(LandsContext))]
    [Migration("20231229162801_Ssdf")]
    partial class Ssdf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CrmBrusnika.Models.Land", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AboutHolder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AreaInMeters")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("RegisterNumber")
                        .HasColumnType("integer");

                    b.Property<string>("WhoIsFound")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Lands");
                });

            modelBuilder.Entity("CrmBrusnika.Models.ObjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AvailabilityEngineeringNetworks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GeotechnicalConditions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("JuridicalCost")
                        .HasColumnType("double precision");

                    b.Property<Guid>("LandId")
                        .HasColumnType("uuid");

                    b.Property<string>("PermissiveSide")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TransportationaAccessibility")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LandId")
                        .IsUnique();

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("CrmBrusnika.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LandId")
                        .HasColumnType("uuid");

                    b.Property<int>("Stage")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("LandId");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("CrmBrusnika.Models.ObjectEntity", b =>
                {
                    b.HasOne("CrmBrusnika.Models.Land", "Land")
                        .WithOne("Entity")
                        .HasForeignKey("CrmBrusnika.Models.ObjectEntity", "LandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Land");
                });

            modelBuilder.Entity("CrmBrusnika.Models.Transaction", b =>
                {
                    b.HasOne("CrmBrusnika.Models.ObjectEntity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrmBrusnika.Models.Land", "Land")
                        .WithMany()
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("Land");
                });

            modelBuilder.Entity("CrmBrusnika.Models.Land", b =>
                {
                    b.Navigation("Entity");
                });
#pragma warning restore 612, 618
        }
    }
}
